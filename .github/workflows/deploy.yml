
name: "Deploy App"

on:
  push:
    branches:
      - main

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '18'
      - name: Build Frontend
        run: |
          cd frontend
          npm install
          npm run build
      - uses: actions/upload-artifact@v2
        with:
          name: frontend-build
          path: frontend/dist/
  build-backend:
    runs-on: ubuntu-latest
    needs: build-frontend
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          #Set Java Version
          java-version: '17'
          distribution: 'adopt'
          cache: 'maven'
      - uses: actions/download-artifact@v2
        with:
          name: frontend-build
          path: backend/src/main/resources/static

      - name: Build with maven
        run: mvn -B package --file backend/pom.xml

      - uses: actions/upload-artifact@v2
        with:
          name: app.jar
          path: backend/target/app.jar

  push-to-docker-hub:
    runs-on: ubuntu-latest
    needs: build-backend
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: app.jar
          path: backend/target

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          #Set dockerhub username
          username: flooooooooooorian
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          #Set dockerhub username/projectName
          tags: flooooooooooorian/deploy-to-aws-with-github-action:${{github.sha}}
          context: .

  deploy:
    runs-on: ubuntu-latest
    needs: push-to-docker-hub
    steps:
      - name: Restart docker container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          #Set Capstone Name
          #Set dockerhub project
          #Set Port
          script: |
            docker stop app-florian
            docker rm app-florian
            docker pull flooooooooooorian/deploy-to-aws-with-github-action:${{github.sha}}
            docker run -d -p 8081:8080 --name app-florian -e SPRING_DATA_MONGODB_URI=${{ secrets.MONGO_DB_URI }} flooooooooooorian/deploy-to-aws-with-github-action:${{github.sha}}
